{"version":3,"sources":["components/Button.js","components/functions.js","components/storage.js","components/TicTacToe.js","App.js","reportWebVitals.js","index.js"],"names":["Button","className","onClick","this","props","label","Component","findWinner","boxes","rows","i","length","a","b","c","areAllBoxesClicked","count","forEach","item","Storage","storageName","initialValue","localStorage","getItem","setItem","JSON","parse","data","stringify","TicTacToe","storage","state","Array","fill","xIsNext","history","onClickHandler","bind","handleBoardRestart","index","slice","utils","push","setState","status","winner","isFilled","update","type","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ef825f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport '../css/Button.css';\r\n\r\nclass Button extends Component {\r\n\r\n  render(){\r\n    return(\r\n      <>\r\n      <div className='Button' onClick = {this.props.onClick}>{this.props.label}</div>\r\n      </>\r\n    )\r\n  }\r\n\r\n}\r\nexport default Button;\r\n","export function findWinner(boxes) {\r\n    // Array with winning combinations\r\n    const rows = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ]\r\n\r\n    // Iterate over array with winning combinations\r\n    for (let i = 0; i < rows.length; i++) {\r\n        const [a, b, c] = rows[i]\r\n\r\n        // Check if the game board contains winning combination\r\n        if (boxes[a] && boxes[a] === boxes[b] && boxes[a] === boxes[c]) {\r\n            // Return the winner ('x' or 'o')\r\n            return boxes[a]\r\n        }\r\n    }\r\n\r\n    // Otherwise do nothing\r\n    return null\r\n}\r\n\r\nexport function areAllBoxesClicked(boxes) {\r\n    // Declare variable to store number of clicked boxes.\r\n    let count = 0\r\n\r\n    // Iterate over all boxes\r\n    boxes.forEach(function (item) {\r\n        // Check if box is clicked (not null)\r\n        if (item !== null) {\r\n            // If yes, increase the value of count by 1\r\n            count++\r\n        }\r\n    })\r\n\r\n    // Check if all boxes are clicked (filled)\r\n    if (count === 9) {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n","export class Storage {\r\n  constructor(storageName = 'gameScoreboard', initialValue = '[]') {\r\n    this.storageName = storageName\r\n\r\n        // Check if localStorage contains any data from previous games\r\n    if (!localStorage.getItem(storageName)) {\r\n            // If not, create new item for our Tic Tac Toe game\r\n      localStorage.setItem(storageName, initialValue)\r\n    }\r\n  }\r\n\r\n    // Load data from previous games from localStorage\r\n  getData() {\r\n    return JSON.parse(localStorage.getItem(this.storageName))\r\n  }\r\n\r\n    // Update data in localStorage\r\n  update(data) {\r\n    localStorage.setItem(this.storageName, JSON.stringify(data))\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react'\r\nimport Button from './Button.js'\r\nimport '../css/ticTacToe.css'\r\nimport * as utils from './functions.js'\r\nimport { Storage } from './storage.js'\r\n\r\nclass TicTacToe extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      boxes : Array(9).fill(null),\r\n      xIsNext : true,\r\n      history : []\r\n    }\r\n    this.onClickHandler = this.onClickHandler.bind(this);\r\n    this.handleBoardRestart = this.handleBoardRestart.bind(this);\r\n  }\r\n  storage = new Storage()\r\n  onClickHandler(index){\r\n    const boxes = this.state.boxes.slice()\r\n    let history = this.state.history\r\n\r\n    if (utils.findWinner(boxes) || boxes[index]) {\r\n        return\r\n    }\r\n    if(utils.areAllBoxesClicked(boxes) === true) {\r\n        return\r\n    }\r\n\r\n    boxes[index] = this.state.xIsNext ? 'X' : 'O'\r\n\r\n    history.push(this.state.xIsNext ? 'X' : 'O')\r\n\r\n    this.setState({\r\n      boxes: boxes,\r\n      history: history,\r\n      xIsNext: !this.state.xIsNext\r\n    })\r\n}\r\nhandleBoardRestart(){\r\n        this.setState({\r\n            boxes: Array(9).fill(null),\r\n            history: [],\r\n            xIsNext: true\r\n        })\r\n    }\r\n\r\n  render(){\r\n    const winner = utils.findWinner(this.state.boxes)\r\n\r\n    const isFilled = utils.areAllBoxesClicked(this.state.boxes)\r\n\r\n    let status\r\n\r\n        if (winner) {\r\n            status = `The winner is: ${winner}!`\r\n            this.storage.update([`${winner} won`])\r\n        } else if(!winner && isFilled) {\r\n            status = 'Game drawn!'\r\n            this.storage.update(['Game drawn'])\r\n        } else {\r\n            status = `${(this.state.xIsNext ? 'X' : 'O')}'s turn`\r\n        }\r\n\r\n    return(\r\n      <>\r\n      <h2 className=\"board-heading\">{status}</h2>\r\n      <div className='ticTacToe-grid'>\r\n        <div className='grid-items'>\r\n          <Button label={this.state.boxes[0]} onClick = { () => this.onClickHandler(0) } />\r\n          <Button label={this.state.boxes[1]} onClick = { () => this.onClickHandler(1) }/>\r\n          <Button label={this.state.boxes[2]} onClick = { () => this.onClickHandler(2) }/>\r\n          <Button label={this.state.boxes[3]} onClick = { () => this.onClickHandler(3) }/>\r\n          <Button label={this.state.boxes[4]} onClick = { () => this.onClickHandler(4) }/>\r\n          <Button label={this.state.boxes[5]} onClick = { () => this.onClickHandler(5) }/>\r\n          <Button label={this.state.boxes[6]} onClick = { () => this.onClickHandler(6) }/>\r\n          <Button label={this.state.boxes[7]} onClick = { () => this.onClickHandler(7) }/>\r\n          <Button label={this.state.boxes[8]} onClick = { () => this.onClickHandler(8) }/>\r\n        </div>\r\n        <input type='button' value='Reset' className='reset-btn' onClick = { () => this.handleBoardRestart() } />\r\n      </div>\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default TicTacToe;\r\n","import './App.css';\nimport TicTacToe from './components/TicTacToe.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <TicTacToe />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}